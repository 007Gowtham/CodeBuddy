{
  "question": {
    "name": "Maximize Sum After K Negations",
    "description": "Given an array of integers and an integer K, you need to maximize the sum of the array after negating some of the elements. You can negate any element any number of times. You are allowed to perform at most K negations.",
    "input_format": "The first line contains two integers N and K, representing the size of the array and the maximum number of negations allowed, respectively.\nThe second line contains N integers, representing the elements of the array.",
    "output_format": "Print the maximum possible sum of the array after performing at most K negations.",
    "constraints": "1 <= N <= 10^5\n1 <= K <= 10^9\n-1000 <= arr[i] <= 1000",
    "time_complexity_hint": "O(n log n)",
    "space_complexity_hint": "O(1)",
    "tags": [
      "arrays",
      "greedy",
      "sorting",
      "dynamic programming"
    ],
    "examples": [
      {
        "input": "3 1\n-2 0 5",
        "output": "7",
        "explanation": "Negate -2 to get 2. The array becomes [2, 0, 5]. Sum = 7"
      },
      {
        "input": "3 2\n2 -3 -1",
        "output": "6",
        "explanation": "Negate -3 and -1 to get 3 and 1. The array becomes [2, 3, 1]. Sum = 6"
      },
      {
        "input": "4 100\n1 2 3 4",
        "output": "10",
        "explanation": "Since all elements are positive, negate the smallest element (1) repeatedly.  Since K is even after negating 1 once, we're left with an even number of negations, so the result is the same as not negating anything at all. Sum = 1+2+3+4 = 10"
      },
      {
        "input": "2 4\n-1 5",
        "output": "6",
        "explanation": "Negate -1 to 1. We have 3 negations left which means we negate 1 three times. So array becomes [1, 5] -> [-1, 5] -> [1, 5] -> [-1, 5]. Result is 5-1 = 4 and then -1+5 -> 6 after sorting."
      }
    ]
  },
  "testCases": [
    {
      "input": "5 2\n1 2 -3 4 5",
      "expected_output": "15",
      "is_sample": true,
      "is_hidden": false,
      "weight": 10,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 1
    },
    {
      "input": "3 1\n-1 0 1",
      "expected_output": "2",
      "is_sample": true,
      "is_hidden": false,
      "weight": 10,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 2
    },
    {
      "input": "1 100\n-42",
      "expected_output": "42",
      "is_sample": false,
      "is_hidden": true,
      "weight": 5,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 3
    },
    {
      "input": "5 5\n-5 -4 -3 -2 -1",
      "expected_output": "15",
      "is_sample": false,
      "is_hidden": true,
      "weight": 10,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 4
    },
    {
      "input": "5 6\n-5 -4 -3 -2 -1",
      "expected_output": "15",
      "is_sample": false,
      "is_hidden": true,
      "weight": 10,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 5
    },
    {
      "input": "5 1000\n1 2 3 4 5",
      "expected_output": "15",
      "is_sample": false,
      "is_hidden": true,
      "weight": 5,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 6
    },
    {
      "input": "3 2\n-1 -1 -1",
      "expected_output": "1",
      "is_sample": false,
      "is_hidden": true,
      "weight": 15,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 7
    },
    {
      "input": "4 4\n-1 0 -2 3",
      "expected_output": "6",
      "is_sample": false,
      "is_hidden": true,
      "weight": 10,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 8
    },
    {
      "input": "5 5\n-1000 -1000 -1000 -1000 -1000",
      "expected_output": "3000",
      "is_sample": false,
      "is_hidden": true,
      "weight": 10,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 9
    },
    {
      "input": "5 1000000000\n-1000 -1000 -1000 -1000 -1000",
      "expected_output": "5000",
      "is_sample": false,
      "is_hidden": true,
      "weight": 15,
      "time_limit": 1000,
      "memory_limit": 256,
      "order": 10
    }
  ],
  "generatedAt": "2025-10-05T16:06:25.784Z"
}